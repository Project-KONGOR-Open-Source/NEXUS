// <auto-generated />
using System;
using MERRICK.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MERRICK.Database.Migrations
{
    [DbContext(typeof(MerrickContext))]
    [Migration("20240506190956_CreateInitialEntities")]
    partial class CreateInitialEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MERRICK.Database.Entities.Core.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AscensionLevel")
                        .HasColumnType("int");

                    b.Property<string>("AutoConnectChatChannels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClanID")
                        .HasColumnType("int");

                    b.Property<int>("ClanTier")
                        .HasColumnType("int");

                    b.Property<string>("IPAddressCollection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("MACAddressCollection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SelectedStoreItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemInformationCollection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemInformationHashCollection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimestampCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimestampJoinedClan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampLastActive")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClanID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Core.Clan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("TimestampCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Name", "Tag")
                        .IsUnique();

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Core.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("GoldCoins")
                        .HasColumnType("int");

                    b.Property<string>("OwnedStoreItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PBKDF2PasswordHash")
                        .IsRequired()
                        .HasMaxLength(84)
                        .HasColumnType("nvarchar(84)");

                    b.Property<int>("PlinkoTickets")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SRPPasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("SRPPasswordSalt")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("SilverCoins")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimestampCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampLastActive")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalExperience")
                        .HasColumnType("int");

                    b.Property<int>("TotalLevel")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Game.HeroGuide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AbilityQueue")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("CoreItems")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("DownVotes")
                        .HasColumnType("int");

                    b.Property<string>("EarlyGameItems")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Featured")
                        .HasColumnType("bit");

                    b.Property<string>("HeroIdentifier")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("HeroName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LuxuryItems")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("StartingItems")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("TimestampCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimestampLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpVotes")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AuthorID");

                    b.ToTable("HeroGuides");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Utility.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "ADMINISTRATOR"
                        },
                        new
                        {
                            ID = 2,
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Utility.Token", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Purpose")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimestampConsumed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Value")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Core.Account", b =>
                {
                    b.HasOne("MERRICK.Database.Entities.Core.Clan", "Clan")
                        .WithMany("Members")
                        .HasForeignKey("ClanID");

                    b.HasOne("MERRICK.Database.Entities.Core.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("MERRICK.Database.Entities.Relational.BannedPeer", "BannedPeers", b1 =>
                        {
                            b1.Property<int>("AccountID")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("BanReason")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)");

                            b1.HasKey("AccountID", "Id");

                            b1.HasIndex("Name")
                                .IsUnique();

                            b1.ToTable("Accounts");

                            b1.ToJson("BannedPeers");

                            b1.WithOwner()
                                .HasForeignKey("AccountID");
                        });

                    b.OwnsMany("MERRICK.Database.Entities.Relational.FriendedPeer", "FriendedPeers", b1 =>
                        {
                            b1.Property<int>("AccountID")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("ClanTag")
                                .HasMaxLength(4)
                                .HasColumnType("nvarchar(4)");

                            b1.Property<string>("FriendGroup")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)");

                            b1.HasKey("AccountID", "Id");

                            b1.HasIndex("Name")
                                .IsUnique();

                            b1.ToTable("Accounts");

                            b1.ToJson("FriendedPeers");

                            b1.WithOwner()
                                .HasForeignKey("AccountID");
                        });

                    b.OwnsMany("MERRICK.Database.Entities.Relational.IgnoredPeer", "IgnoredPeers", b1 =>
                        {
                            b1.Property<int>("AccountID")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)");

                            b1.HasKey("AccountID", "Id");

                            b1.HasIndex("Name")
                                .IsUnique();

                            b1.ToTable("Accounts");

                            b1.ToJson("IgnoredPeers");

                            b1.WithOwner()
                                .HasForeignKey("AccountID");
                        });

                    b.Navigation("BannedPeers");

                    b.Navigation("Clan");

                    b.Navigation("FriendedPeers");

                    b.Navigation("IgnoredPeers");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Core.User", b =>
                {
                    b.HasOne("MERRICK.Database.Entities.Utility.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Game.HeroGuide", b =>
                {
                    b.HasOne("MERRICK.Database.Entities.Core.Account", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Core.Clan", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("MERRICK.Database.Entities.Core.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
